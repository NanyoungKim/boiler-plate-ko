[{"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/index.js":"1","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/App.js":"2","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/reportWebVitals.js":"3","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/components/views/LandingPage/LandingPage.js":"4","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/components/views/RegisterPage/RegisterPage.js":"5","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/components/views/LoginPage/LoginPage.js":"6","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_reducers/index.js":"7","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/serviceWorker.js":"8","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_actions/user_action.js":"9","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_actions/types.js":"10","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_reducers/user_reducer.js":"11"},{"size":1187,"mtime":1610980437408,"results":"12","hashOfConfig":"13"},{"size":1001,"mtime":1610944942216,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610768963218,"results":"15","hashOfConfig":"13"},{"size":682,"mtime":1610972011021,"results":"16","hashOfConfig":"13"},{"size":2907,"mtime":1611041858161,"results":"17","hashOfConfig":"13"},{"size":2380,"mtime":1611043038107,"results":"18","hashOfConfig":"13"},{"size":173,"mtime":1611043354384,"results":"19","hashOfConfig":"13"},{"size":0,"mtime":1610972281047,"results":"20","hashOfConfig":"13"},{"size":927,"mtime":1611043208619,"results":"21","hashOfConfig":"13"},{"size":168,"mtime":1611043193378,"results":"22","hashOfConfig":"13"},{"size":632,"mtime":1611044577335,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11skfzk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/index.js",[],["50","51"],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/App.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/reportWebVitals.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/components/views/LandingPage/LandingPage.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/components/views/RegisterPage/RegisterPage.js",["52","53"],"import React, { useState } from 'react'\nimport {useDispatch} from 'react-redux';\nimport {loginUser} from '../../../_actions/user_action'\nimport {registerUser} from '../../../_actions/user_action'\nimport { withRouter} from 'react-router-dom'\n\nfunction RegisterPage(props) {\n\n\n    const dispatch = useDispatch();\n\n    const [Email, setEmail] = React.useState(\" \")\n    const [Password, setPassword] = React.useState(\" \")\n    const [Name, setName] = React.useState(\" \")\n    const [ConfirmPassword, setConfirmPassword] = React.useState(\" \")\n\n    const onEmailHandler = (event) => {\n        setEmail(event.currentTarget.value)\n    }\n\n    const onNameHandler = (event) => {\n        setName(event.currentTarget.value)\n    }\n\n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value)\n    }\n    const onConfirmPasswordHandler = (event) => {\n        setConfirmPassword(event.currentTarget.value)\n    }\n\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault(); //리프레시 방지-> 방지해야 이 아래 라인의 코드들 실행 가능 \n\n        // console.log('Email', Email);\n        // console.log('Password', Password);\n\n        //비밀번호와 비밀번호 확인 같을띠 회원가입 되게 함\n        if(Password !== ConfirmPassword){\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.')\n        }   //여기서 걸리면 아래로 못감 \n\n\n\n        let body={\n            email: Email,\n            password: Password,\n            name: Name\n        }\n\n\n    //디스패치로 액션 취하기\n    dispatch(registerUser(body))\n    .then(response => {\n        if(response.payload.success) {\n            props.history.push('/login')\n        } else {\n            alert('Failed to sign up')\n        }\n        \n    })\n\n\n    \n    }\n\n\n\n    return (\n        <div style={{\n            display: 'flex', justifyContent: 'center', alignItems: 'center',\n            width: '100%', height: '100vh'\n        }}>\n            \n            \n            <form style={{display: 'flex', flexDirection: 'column'}}\n                onSubmit={onSubmitHandler}\n            >\n\n                <label>Email</label>\n                <input type=\"email\" value={Email} onChange={onEmailHandler}/>   \n                \n                <label>Name</label>\n                <input type=\"text\" value={Name} onChange={onNameHandler}/>\n\n\n                <label>Password</label>\n                <input type=\"password\" value={Password} onChange={onPasswordHandler}/>\n                \n                <label>Confirm Password</label>\n                <input type=\"password\" value={ConfirmPassword} onChange={onConfirmPasswordHandler}/>\n\n                <br />\n                <button>\n                    회원 가입 \n                </button>\n            </form>\n\n        </div>\n    )\n}\n\n//export default RegisterPage\n\n\nexport default withRouter(RegisterPage)","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/components/views/LoginPage/LoginPage.js",["54","55"],"//client/src/components/views/LoginPage/LoginPage.js\n\n\nimport React, { useState } from 'react'\nimport Axios from 'axios'\nimport {useDispatch} from 'react-redux';\nimport {loginUser} from '../../../_actions/user_action'\nimport { withRouter } from 'react-router-dom';\n\n\nfunction LoginPage(props) {     //파라미터로 props 넣어줘야함! 로그인 완료된 후 처음 화면으로 돌아가게 하기 위함 \n\n    const dispatch = useDispatch();\n\n    const [Email, setEmail] = React.useState(\" \")\n    const [Password, setPassword] = React.useState(\" \")\n\n    const onEmailHandler = (event) => {\n        setEmail(event.currentTarget.value)\n    }\n    \n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value)\n    }\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault(); //리프레시 방지-> 방지해야 이 아래 라인의 코드들 실행 가능 \n\n        // console.log('Email', Email);\n        // console.log('Password', Password);\n\n\n        let body={\n            email: Email,\n            password: Password\n        }\n\n        //디스패치로 액션 취하기\n        dispatch(loginUser(body))\n        .then(response => {\n            if(response.payload.loginSuccess) {\n                props.history.push('/')             //리액트에서 페이지 이동하기 위해서는 props.history.push() 이용.\n               \t\t\t\t\t\t\t\t\t\t// 로그인 완료된 후 처음 화면(루트 페이지-landingpage로)으로 돌악가게 하기 \n            } else{\n                alert(' Error')\n            }\n        })\n\n\n        \n    }\n\n    return (\n        <div style={{\n            display: 'flex', justifyContent: 'center', alignItems: 'center',\n            width: '100%', height: '100vh'\n        }}>\n            \n            \n            <form style={{display: 'flex', flexDirection: 'column'}}\n                onSubmit={onSubmitHandler}\n            >\n\n                <label>Email</label>\n                <input type=\"email\" value={Email} onChange={onEmailHandler}/>   \n                <label>Password</label>\n                <input type=\"password\" value={Password} onChange={onPasswordHandler}/>\n\n                <br />\n                <button type=\"submit\">\n                    Login\n                </button>\n            </form>\n\n        </div>\n    )\n}\n\n//export default LoginPage\nexport default withRouter(LoginPage)\n\n","/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_reducers/index.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/serviceWorker.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_actions/user_action.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_actions/types.js",[],"/Users/kimnan-young/NanyoungFiles/Programming/boiler-plate/client/src/_reducers/user_reducer.js",["56","57","58"],"import { LOGIN_USER, REGISTER_USER } from '../_actions/types';\n\n\nexport default function(state={}, action){  //state 는 이전 상태 \n\n    switch(action.type){        //Action에는 여러 타입 존재함. 이 타입에 따라 다르게 반응하도록 작성\n        case LOGIN_USER:\n            return {...state, loginSuccess: action.payload}       //... : spread operator은 파라미터 state를 그대로 가져온 것으로 빈 상태를 의미 \n            break;\n\n        case REGISTER_USER:\n            return { ...state, register: action.payload}\n            break;\n\n        default:\n            return state;\n\n    }\n\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":3,"column":9,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":4,"column":17,"nodeType":"65","messageId":"66","endLine":4,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":4,"column":1,"nodeType":"71","endLine":20,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":9,"column":13,"nodeType":"74","messageId":"75","endLine":9,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":13,"column":13,"nodeType":"74","messageId":"75","endLine":13,"endColumn":19},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'loginUser' is defined but never used.","'Axios' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]